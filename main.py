import telebot
from telebot import types
import csv

import  setting

bot = telebot.TeleBot(setting.TOKEN)
spisok_players = []


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("‚ùì –ò–Ω—Ñ–æ –æ —Ñ—É—Ç–±–æ–ª–µ")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç".format(
                         message.from_user),
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        url = 'https://t.me/+PJwnI9BhtiFlYWUy'
        bot.send_message(
            message.chat.id,
            text=
            f"""–ü—Ä–∏–≤–µ–µ—Ç {message.chat.first_name}üëã
–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ –Ω–∞–º!üòé

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ {url}""")
    elif message.text == "‚ùì –ò–Ω—Ñ–æ –æ —Ñ—É—Ç–±–æ–ª–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton("–°–æ—Å—Ç–∞–≤ –Ω–∞ –±–ª–∏–∂–∞–π—à–µ—é –ø—è—Ç–Ω–∏—Ü—É")
        btn2 = types.KeyboardButton("–°–∫–æ–ª—å–∫–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç")
        btn3 = types.KeyboardButton("–Ø –∏–≥—Ä–∞—é")
        btn4 = types.KeyboardButton("–Ø –Ω–µ –∏–≥—Ä–∞—é")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, btn4, back)
        bot.send_message(message.chat.id,
                         text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å",
                         reply_markup=markup)

    elif message.text == "–Ø –∏–≥—Ä–∞—é":
        with open('players.csv', encoding='utf-8') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [i for i in reader]
            if len(spisok) >= 18:
                bot.send_message(message.chat.id,
                                 f"{message.from_user.first_name}, –º–µ—Å—Ç –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å")
            elif [str(message.from_user.id) + ' ' + message.from_user.first_name
                  ] in spisok:
                bot.send_message(
                    message.chat.id,
                    f"{message.from_user.first_name}, —Ç—ã —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ")
            else:
                with open('players.csv', 'a+', encoding='utf-8',
                          newline='') as cvsfile:
                    write = csv.writer(cvsfile)
                    write.writerow(
                        [str(message.from_user.id) + ' ' + message.from_user.first_name])
                    bot.send_message(message.chat.id,
                                     f"""{message.from_user.first_name}, –∑–∞–ø–∏—Å–∞–ª —Ç–µ–±—è.
(–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —Ç–æ –Ω–µ –∑–∞–±—É–¥—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–Ø –Ω–µ –∏–≥—Ä–∞—é üôÑ")
  """)

    elif message.text == "–Ø –Ω–µ –∏–≥—Ä–∞—é":
        with open('players.csv', encoding='utf-8') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [i for i in reader]
            if [str(message.from_user.id) + ' ' + message.from_user.first_name
                ] not in spisok:
                bot.send_message(message.chat.id,
                                 f"{message.from_user.first_name}, —Ç–µ–±—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")
            else:
                spisok = [
                    i for i in spisok if i !=
                                         [str(message.from_user.id) + ' ' + message.from_user.first_name]
                ]
                with open('players.csv', 'w', encoding='utf-8') as cvsfile:
                    writer = csv.writer(cvsfile)
                    for line in spisok:
                        writer.writerow(line)
                    bot.send_message(
                        message.chat.id,
                        f"{message.from_user.first_name}, —É–¥–∞–ª–∏–ª —Ç–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞")

    elif message.text == "–°–æ—Å—Ç–∞–≤ –Ω–∞ –±–ª–∏–∂–∞–π—à–µ—é –ø—è—Ç–Ω–∏—Ü—É":
        with open('players.csv', encoding='utf-8', newline='') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [' '.join(map(str, i)) for i in reader]
            if spisok == []:
                bot.send_message(message.chat.id, f"–ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç , –±—É–¥—å –ø–µ—Ä–≤—ã–º üí™")
            else:
                spisok_req = '\n'.join(map(str, spisok))
                bot.send_message(message.chat.id, f"{spisok_req}")

    elif message.text == "–°–∫–æ–ª—å–∫–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç":
        with open('players.csv', encoding='utf-8') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [i for i in reader]
            if len(spisok) == 18:
                bot.send_message(message.chat.id, text=f"–°–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç –Ω–µ—Ç üò´")
            else:
                bot.send_message(message.chat.id, text=f"–û—Å—Ç–∞–ª–æ—Å—å {18 - len(spisok)}")

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("‚ùì –ò–Ω—Ñ–æ –æ —Ñ—É—Ç–±–æ–ª–µ")
        markup.add(button1, button2)
        bot.send_message(message.chat.id,
                         text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                         reply_markup=markup)
    else:
        bot.send_message(message.chat.id,
                         text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..üòû")


bot.polling(non_stop=True, interval=0)

