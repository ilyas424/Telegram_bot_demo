import telebot
from telebot import types
import csv

import settings

bot = telebot.TeleBot(settings.TOKEN)


@bot.message_handler(commands=['start'])
def send_anytext(message):
    print(message.from_user.id)
    chat_id = message.chat.id
    text = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É'
    bot.send_message(chat_id, text, parse_mode='HTML', reply_markup=list_commands(chat_id))


@bot.message_handler(commands=['admin'])
def is_admin(message):
    if message.from_user.id in settings.list_admin:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ")
        btn2 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞")
        btn3 = types.KeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫")
        btn4 = types.KeyboardButton("–°–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É")
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤–µ–ª–∏–∫–∏–π –∞–¥–º–∏–Ω', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞')


@bot.message_handler(content_types=['text', 'photo'])
def send_call(message):
    chat_id = message.chat.id
    if message.text == '@football_tatarlar_Bot':
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É'
        bot.send_message(chat_id, text, parse_mode='HTML', reply_markup=list_commands(chat_id))

    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ' and message.from_user.id  in settings.list_admin:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ")
        btn2 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç")
        btn3 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, text='–ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=markup)
        bot.register_next_step_handler(message, edit_info)

    if message.text == '–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞' and message.from_user.id  in settings.list_admin:
        with open('data/players.csv', encoding='utf-8') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [' '.join(map(str, i)) for i in reader]
            spisok_ref = [f'{i + 1}) {spisok[i]}' for i in range(len(spisok))]
            if spisok == []:
                bot.send_message(message.chat.id, f"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç")
            else:
                spisok_req = '\n'.join(map(str, spisok_ref))
                bot.send_message(message.chat.id, f"""{spisok_req}
""")
                bot.send_message(message.chat.id, text='–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞')
                bot.register_next_step_handler(message, edit_list_players)

    if message.text == '–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫' and message.from_user.id  in settings.list_admin:
        with open('data/players.csv', 'w', encoding='utf-8') as cvsfile:
            csv.reader(cvsfile)
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω")

    if message.text == '–°–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É' and message.from_user.id  in settings.list_admin:
        remove = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–°–∫—Ä—ã–ª', reply_markup=remove)


def edit_info(message):
    remove = telebot.types.ReplyKeyboardRemove()
    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç':
        bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',reply_markup=remove)
        bot.register_next_step_handler(message, edit_text)
    elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ':
        bot.send_message(message.chat.id, text='–û—Ç–ø—Ä–∞–≤—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ', reply_markup=remove)
        bot.register_next_step_handler(message, edit_photo)
        
    elif message.text == '–û—Ç–º–µ–Ω–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ")
        btn2 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞")
        btn3 = types.KeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫")
        btn4 = types.KeyboardButton("–°–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É")
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, text='–í–µ—Ä–Ω—É–ª –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)


def edit_text(message):
    if message.text != '':
        with open('data/location.txt', 'w', encoding='utf-8') as file:
            file.write(message.text)
        bot.send_message(message.chat.id, '–°–æ—Ö—Ä–∞–Ω–∏–ª —Ç–µ–∫—Å—Ç')
    else:
        bot.send_message(message.chat.id, text=f'–¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã')


def edit_photo(message):
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open('data/image.jpg', 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.send_message(message.chat.id, '–°–æ—Ö—Ä–∞–Ω–∏–ª —Ñ–æ—Ç–æ')


def edit_list_players(message):
    with open('data/players.csv', encoding='utf-8') as cvsfile:
        reader = csv.reader(cvsfile)
        spisok_def = [i for i in reader]
    if message.text != '' and message.text.isdigit() and (
            int(message.text) <= len(spisok_def) and int(message.text) > 0):
        spisok_def.pop(int(message.text) - 1)

        with open('data/players.csv', 'w', encoding='utf-8', newline='') as cvsfile:
            writer = csv.writer(cvsfile)
            for line in spisok_def:
                writer.writerow(line)
            bot.send_message(
                message.chat.id,
                f"–í–µ–ª–∏–∫–∏–π –∞–¥–º–∏–Ω, —É–¥–∞–ª–∏–ª –∏–≥—Ä–æ–∫–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {message.text}")
    else:
        bot.send_message(message.chat.id, text=f'–í–≤–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω')


@bot.callback_query_handler(func=lambda message: True)
def ans(message):
    chat_id = message.message.chat.id

    if "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ" == message.data:
        bot.answer_callback_query(message.id)
        with open('data/location.txt', encoding='utf-8') as file:
            x = file.read()
        if x != '':
            bot.send_message(chat_id, x)
        else:
            bot.send_message(chat_id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç')

        with open('data/image.jpg', 'rb') as photo:
            bot.send_photo(chat_id, photo)


    elif "–°–æ—Å—Ç–∞–≤ –Ω–∞ –±–ª–∏–∂–∞–π—â—É—é –∏–≥—Ä—É" == message.data:
        bot.answer_callback_query(message.id)
        with open('data/players.csv', encoding='utf-8') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [' '.join(map(str, i)) for i in reader]
            spisok_ref = [f'{i + 1}) {spisok[i]}' for i in range(len(spisok))]
            if spisok == []:
                bot.send_message(chat_id, f"–ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç , –±—É–¥—å –ø–µ—Ä–≤—ã–º üí™")
            else:
                spisok_req = '\n'.join(map(str, spisok_ref))
                bot.send_message(chat_id, f"""{spisok_req}
        """)


    elif message.data == "–Ø –Ω–µ –∏–≥—Ä–∞—é":
        bot.answer_callback_query(message.id)
        with open('data/players.csv', encoding='utf-8') as cvsfile:
            reader = csv.reader(cvsfile)
            spisok = [i for i in reader]
        if [str(message.from_user.id)[:4] + ' ' + message.from_user.first_name
            ] not in spisok:
            bot.send_message(chat_id,
                             f"{message.from_user.first_name}, —Ç–µ–±—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")
        else:
            spisok = [
                i for i in spisok if i !=
                                     [str(message.from_user.id)[:4] + ' ' + message.from_user.first_name]
            ]
            with open('data/players.csv', 'w', encoding='utf-8', newline='') as cvsfile:
                writer = csv.writer(cvsfile)
                for line in spisok:
                    writer.writerow(line)
                bot.send_message(
                    chat_id,
                    f"{message.from_user.first_name}, —É–¥–∞–ª–∏–ª —Ç–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞")


    elif message.data == "–Ø –∏–≥—Ä–∞—é":
        bot.answer_callback_query(message.id)
        with open('data/players.csv', encoding='utf-8') as csvfile:
            reader = csv.reader(csvfile)
            spisok = [i for i in reader]
        if [str(message.from_user.id)[:4] + ' ' + message.from_user.first_name
            ] in spisok:
            bot.send_message(
                chat_id,
                f"{message.from_user.first_name}, —Ç—ã —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ")
        else:
            with open('data/players.csv', 'a+', encoding='utf-8',
                      newline='') as csvfile:
                write = csv.writer(csvfile)
                write.writerow(
                    [str(message.from_user.id)[:4] + ' ' + message.from_user.first_name])
                bot.send_message(chat_id,
                                 f"""{message.from_user.first_name}, –∑–∞–ø–∏—Å–∞–ª —Ç–µ–±—è.
(–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —Ç–æ –Ω–µ –∑–∞–±—É–¥—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–Ø –Ω–µ –∏–≥—Ä–∞—é "üôÑ)
          """)


def list_commands(chat_id):
    keyboard = types.InlineKeyboardMarkup()
    command = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ', '–Ø –∏–≥—Ä–∞—é', '–Ø –Ω–µ –∏–≥—Ä–∞—é', '–°–æ—Å—Ç–∞–≤ –Ω–∞ –±–ª–∏–∂–∞–π—â—É—é –∏–≥—Ä—É']
    for i in command:
        keyboard.add(types.InlineKeyboardButton(text=i, callback_data=i))
    return keyboard


bot.polling(non_stop=True, interval=0)
